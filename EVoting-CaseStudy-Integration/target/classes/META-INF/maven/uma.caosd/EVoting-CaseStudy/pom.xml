<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>uma.caosd</groupId>
  <artifactId>EVoting-CaseStudy</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>EVoting-CaseStudy</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     <java.version>1.6</java.version>
     <activemq.version>5.9.1</activemq.version>
     <xmltexteditor.version>0.0.3</xmltexteditor.version>
     <org.apache.commons.version>1.3.2</org.apache.commons.version>
     <aspectj.version>1.7.3</aspectj.version>
		 <org.springframework.version>3.0.7.RELEASE</org.springframework.version>
		 <cglib.version>2.2</cglib.version>
	   <asm.version>3.3.1</asm.version>
	   <aopalliance.version>1.0</aopalliance.version>
	   <org.jdom.version>2.0.5</org.jdom.version>
  </properties>

	<!-- remote repositories -->
	<repositories>
		<!-- Repository for xml-text-editor -->
		<repository>
	    <id>sonatype-forge</id>
	    <url>https://repository.sonatype.org/content/groups/forge/</url>
	  </repository>
	</repositories>
	
	<dependencies>
		<!-- External dependencies -->
				<!-- ActiveMQ -->
		<dependency>
  		<groupId>org.apache.activemq</groupId>
  		<artifactId>activemq-all</artifactId>
  		<version>${activemq.version}</version>
		</dependency>

		<!-- Apache commons codec: Base64 -->
		<dependency>
			<groupId>org.apache.directory.studio</groupId>
			<artifactId>org.apache.commons.codec</artifactId>
			<version>1.8</version>
		</dependency>
		
		<!-- xml-text-editor -->
		<dependency>
		  <groupId>net.boplicity</groupId>
		  <artifactId>xml-text-editor</artifactId>
		  <version>${xmltexteditor.version}</version>
		</dependency>
				 
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>${org.apache.commons.version}</version>
		</dependency>
		
		<!-- AspectJ -->
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjrt</artifactId>
		    <version>${aspectj.version}</version>
		</dependency>
        
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
    
    <!-- Spring --> 
    <!-- 
			Core utilities used by other modules.
		  Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
		  <artifactId>spring-core</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>

		<!--
		  Expression Language (depends on spring-core)
		  Define this if you use Spring Expression APIs (org.springframework.expression.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-expression</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>

		<!-- 
	  	Bean Factory and JavaBeans utilities (depends on spring-core)
	    Define this if you use Spring Bean APIs (org.springframework.beans.*) 
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-beans</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>

		<!--
	   	Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
	   	Define this if you use Spring AOP APIs (org.springframework.aop.*)
		-->
		<dependency>
		 	<groupId>org.springframework</groupId>
		 	<artifactId>spring-aop</artifactId>
		 	<version>${org.springframework.version}</version>
		</dependency>

		<!--
		  Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) 
		  This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
		<dependency>
			<groupId>org.springframework</groupId>
		  <artifactId>spring-context</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>

		<!--
		  Support for testing Spring applications with tools such as JUnit and TestNG
		  This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		 	<artifactId>spring-test</artifactId>
		  <version>${org.springframework.version}</version>
		 	<scope>test</scope>
		</dependency>

		<!--  CGLIB To use Spring proxy -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib.version}</version>
			<scope>runtime</scope>
		</dependency>		
		 
		<!-- ASM -->           
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>${asm.version}</version>
			<scope>runtime</scope>
		</dependency>
    
    <!-- AOP Alliance -->  
    <dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>${aopalliance.version}</version>
		</dependency>
		
		<!-- JDOM: Complete Java-based solution for accessing, manipulating, and outputting XML data from Java code. -->
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom2</artifactId>
			<version>${org.jdom.version}</version>
		</dependency>
		
	</dependencies>
  
 <!-- Build Settings -->
  <build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
  
  	<!-- Maven's plugins -->
			<plugins>
		  	
		  	<!-- Maven compiler's plugin -->
		  	<plugin>
		    	<groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-compiler-plugin</artifactId>
		      <version>3.1</version>
		      <configuration>
		        <source>${java.version}</source>
		        <target>${java.version}</target>
		      </configuration>
		    </plugin>
	      
	      <!-- AspectJ's plugin -->
		    <plugin>
		      <groupId>org.codehaus.mojo</groupId>
		      <artifactId>aspectj-maven-plugin</artifactId>
		      <version>1.5</version>
		      <configuration>
		         <ajdtBuildDefFile>buildDistributed.ajproperties</ajdtBuildDefFile>
		      </configuration>
		      <executions>
		        <execution>
		          <goals>
		            <goal>compile</goal>
		          </goals>
		          <configuration>
	        			<complianceLevel>${java.version}</complianceLevel>
	   					</configuration>
		        </execution>
		      </executions>
		    </plugin>
	  
	       <!--  Run mvn assembly:assembly -->
	      <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <configuration>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
            <archive>
				       <addMavenDescriptor>false</addMavenDescriptor>
				       <manifest>
								 <mainClass>uma.caosd.evoting.server.MainServer</mainClass>
								</manifest>
				     </archive>
          </configuration>
        </plugin>

				<!-- Maven jar plugin -->
				<plugin>
				   <artifactId>maven-jar-plugin</artifactId>
				   <configuration>
				     <archive>
				       <addMavenDescriptor>false</addMavenDescriptor>
				       <manifest>
								 <mainClass>uma.caosd.evoting.server.MainServer</mainClass>
								</manifest>
				     </archive>
				   </configuration>
				 </plugin>
				 
	   <!-- Maven shade's plugin: using this plugin the .jar file includes dependencies -->
		<!-- 
			  <plugin>
			  	<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
			  	<version>1.7</version>
				  <executions>
				  	<execution>
				    	<id>EVoting-CaseStudy</id>
				      <phase>package</phase>
				      <goals>
				        <goal>shade</goal>
				      </goals>
				      <configuration>
				        <finalName>EVoting-CaseStudy</finalName>
				        <shadedArtifactAttached>true</shadedArtifactAttached>
				        <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
				        
				        <excludes> 
								</excludes>
				      </configuration>
				    </execution>
				  </executions>
			  </plugin>
	 -->

			   
		  </plugins>
	</build>
	
 
</project>
